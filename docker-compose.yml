version: '3.8'

services:
  back-end:
    build: 
      context: ./node
    container_name: back-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "3000:3000"
    command: npm run start
    depends_on:
      - db

  front-end:
    build: 
      context: ./react
    container_name: front-end
    working_dir: /usr/src/app
    networks: 
      - node-network
    volumes: 
      - ./react:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports: 
      - "5173:5173"
    command: npm run dev

  db:
    image: ${DB_IMAGE}  # Use the image defined in the .env file
    container_name: ${DB_CONTAINER_NAME}  # Use the container name defined in the .env file
    restart: ${DB_RESTART}  # Use the restart policy defined in the .env file
    tty: true
    environment:
      POSTGRES_USER: ${DB_USER}  # Use the user defined in the .env file
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # Use the password defined in the .env file
      POSTGRES_DB: ${DB_VOLUME}  # This can be adjusted based on your requirement
    volumes:
      - pgdata:/var/lib/postgresql/data  # Use named volume for PostgreSQL data storage
    ports: 
      - "${DB_PORT}:5432"  # Map the defined port from the .env file
    networks: 
      - node-network

  nginx:
    build: 
      context: ./nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - node-network
    depends_on:
      - back-end
      - front-end
  
networks: 
  node-network:
    driver: bridge

volumes:
  pgdata: {}  # Define the named volume for PostgreSQL data storage
