services:
  back-end:
    build:
      context: ./node
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - start
    container_name: back-end
    depends_on:
      db:
        condition: service_started
        required: true
    networks:
      - node-network
    ports:
      - "3000:3000"
    tty: true
    volumes:
      - ./node:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app

  db:
    container_name: postgres_container
    environment:
      POSTGRES_DB: postgres_container  # Set the database name here
      POSTGRES_PASSWORD: "1234"
      POSTGRES_USER: postgres
    image: postgres:13
    networks:
      - node-network
    ports:
      - "5432:5432"  # Correctly map ports
    restart: always
    tty: true
    volumes:
      - pgdata:/var/lib/postgresql/data  # Use the named volume here

  front-end:
    build:
      context: ./react
      dockerfile: Dockerfile
    command:
      - npm
      - run
      - dev
    container_name: front-end
    networks:
      - node-network
    ports:
      - "5173:5173"
    tty: true
    volumes:
      - ./react:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    depends_on:
      back-end:
        condition: service_started
        required: true
      front-end:
        condition: service_started
        required: true
    networks:
      - node-network
    ports:
      - "8000:80"
    restart: always
    tty: true

networks:
  node-network:
    driver: bridge

volumes:
  pgdata:  # Define the named volume for PostgreSQL data storage
